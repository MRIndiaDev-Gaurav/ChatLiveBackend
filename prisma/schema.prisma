// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String          @id @default(uuid())
  firstName         String
  lastName          String?
  email             String          @unique
  country           String
  password          String
  role              Role            @default(USER)
  verified          Boolean         @default(false)
  verificationToken String?
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  sentMessages      DirectMessage[] @relation("SentMessages")
  receivedMessages  DirectMessage[] @relation("ReceivedMessages")
  groupMessages     GroupMessage[]
  memberOfGroups    GroupMember[]
  createdGroups     Group[]
}

enum Role {
  USER
  ADMIN
}

model Group {
  id           String         @id @default(uuid())
  name         String
  description  String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  createdById  String
  createdBy    User           @relation(fields: [createdById], references: [id])
  GroupMember  GroupMember[]
  GroupMessage GroupMessage[]
}

model GroupMember {
  id       String   @id @default(uuid())
  groupId  String
  userId   String
  group    Group    @relation(fields: [groupId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
  joinedAt DateTime @default(now())

  @@unique([userId, groupId])
}

model DirectMessage {
  id          String   @id @default(uuid())
  content     String
  senderId    String
  recipientId String
  read        Boolean  @default(false)
  createdAt   DateTime @default(now())

  // Relations
  sender    User @relation("SentMessages", fields: [senderId], references: [id])
  recipient User @relation("ReceivedMessages", fields: [recipientId], references: [id])
}

model GroupMessage {
  id        String   @id @default(uuid())
  content   String
  senderId  String
  groupId   String
  createdAt DateTime @default(now())

  // Relations
  sender User  @relation(fields: [senderId], references: [id])
  group  Group @relation(fields: [groupId], references: [id])
}
